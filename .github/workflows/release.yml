name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    permissions:
      contents: write
      packages: write
    runs-on: ${{ matrix.os }}
    environment: Production
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      # Install required dependencies for Linux builds
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-0 libwebkit2gtk-4.1-0 libgbm1

      # Build for Windows
      - name: Build Windows
        if: matrix.os == 'windows-latest'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bun run build
          bun electron-builder --windows --publish always

      # Build for macOS
      - name: Build macOS
        if: matrix.os == 'macos-latest'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          DEBUG: electron-builder,electron-builder:*
        run: |
          echo "Starting macOS build..."
          echo "Certificate exists: $([[ ! -z "$CSC_LINK" ]] && echo "Yes" || echo "No")"
          echo "Password exists: $([[ ! -z "$CSC_KEY_PASSWORD" ]] && echo "Yes" || echo "No")"
          bun run build
          bun electron-builder --mac --universal --x64 --arm64 --publish always

      # Build for Linux
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bun run build
          bun electron-builder --linux --publish always
